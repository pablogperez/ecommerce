{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { emailSignInStart, signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* signUp({\n  payload\n}) {\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = payload;\n\n  try {\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield call(createUserProfileDocument, user, {\n      displayName\n    });\n    yield put(signUpSuccess());\n    yield put(emailSignInStart(email, password));\n  } catch (error) {\n    alert(error);\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["D:/Proyectos/ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","emailSignInStart","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","user","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","userAuth","signOut","signUp","displayName","confirmPassword","alert","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\nimport { \r\n    emailSignInStart,\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure,\r\n    signUpSuccess,\r\n    signUpFailure\r\n} from './user.actions';\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nexport function* getSnapshotFromUserAuth(user) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch(error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        yield put(signInFailure(error.message));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password}}) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nfunction* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nfunction* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nfunction* signUp({payload}) {\r\n    const { displayName, email, password, confirmPassword } = payload;\r\n    try {\r\n        if(password !== confirmPassword) {\r\n            alert('Passwords do not match');\r\n            return;\r\n        }\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield call(createUserProfileDocument, user, { displayName });\r\n        yield put(signUpSuccess());\r\n        yield put(emailSignInStart(email, password));\r\n    } catch (error) {\r\n        alert(error);\r\n        yield put(signUpFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}